# 1 "td_4/eee_parser/Lexer.mll"
 
    open Parser
    exception Error of string

# 7 "td_4/eee_parser/Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\242\255\243\255\010\000\245\255\246\255\248\255\001\000\
    \250\255\251\255\252\255\253\255\026\000\027\000\001\000\255\255\
    \023\000\024\000\002\000\254\255\030\000\028\000\027\000\249\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\011\000\255\255\255\255\255\255\013\000\
    \255\255\255\255\255\255\255\255\008\000\255\255\255\255\255\255\
    \001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\255\255\018\000\014\000\000\000\
    \255\255\020\000\018\000\000\000\018\000\255\255\255\255\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\011\000\010\000\015\000\000\000\011\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\004\000\006\000\009\000\017\000\008\000\022\000\012\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\013\000\017\000\020\000\019\000\
    \017\000\014\000\016\000\020\000\023\000\021\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\000\000\000\000\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\014\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\018\000\000\000\007\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\012\000\013\000\016\000\017\000\
    \020\000\012\000\013\000\021\000\022\000\020\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\014\000\018\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \017\000\255\255\255\255\013\000\255\255\255\255\020\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 11 "td_4/eee_parser/Lexer.mll"
                          (token lexbuf)
# 119 "td_4/eee_parser/Lexer.ml"

  | 1 ->
# 12 "td_4/eee_parser/Lexer.mll"
                                                                       (token lexbuf)
# 124 "td_4/eee_parser/Lexer.ml"

  | 2 ->
# 13 "td_4/eee_parser/Lexer.mll"
                        (token lexbuf)
# 129 "td_4/eee_parser/Lexer.ml"

  | 3 ->
# 14 "td_4/eee_parser/Lexer.mll"
                        ( Lexing.new_line lexbuf ; token lexbuf )
# 134 "td_4/eee_parser/Lexer.ml"

  | 4 ->
# 15 "td_4/eee_parser/Lexer.mll"
                        ( ADD )
# 139 "td_4/eee_parser/Lexer.ml"

  | 5 ->
# 16 "td_4/eee_parser/Lexer.mll"
                        ( SUB )
# 144 "td_4/eee_parser/Lexer.ml"

  | 6 ->
# 17 "td_4/eee_parser/Lexer.mll"
                        ( REC )
# 149 "td_4/eee_parser/Lexer.ml"

  | 7 ->
# 18 "td_4/eee_parser/Lexer.mll"
                        ( MUL )
# 154 "td_4/eee_parser/Lexer.ml"

  | 8 ->
# 19 "td_4/eee_parser/Lexer.mll"
                        ( DIV )
# 159 "td_4/eee_parser/Lexer.ml"

  | 9 ->
# 20 "td_4/eee_parser/Lexer.mll"
                        ( LPAR )
# 164 "td_4/eee_parser/Lexer.ml"

  | 10 ->
# 21 "td_4/eee_parser/Lexer.mll"
                        ( RPAR )
# 169 "td_4/eee_parser/Lexer.ml"

  | 11 ->
let
# 22 "td_4/eee_parser/Lexer.mll"
                 i
# 175 "td_4/eee_parser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 22 "td_4/eee_parser/Lexer.mll"
                        ( INT(try int_of_string i with Failure _ -> raise (Error(i)) ))
# 179 "td_4/eee_parser/Lexer.ml"

  | 12 ->
# 23 "td_4/eee_parser/Lexer.mll"
                        ( EOF )
# 184 "td_4/eee_parser/Lexer.ml"

  | 13 ->
let
# 24 "td_4/eee_parser/Lexer.mll"
           s
# 190 "td_4/eee_parser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 24 "td_4/eee_parser/Lexer.mll"
                        ( let pos = Lexing.lexeme_start_p lexbuf in raise (Error(Format.sprintf "Line %d, char %d ,Read: '%c'. It is not an acceptable character" pos.pos_lnum (pos.pos_cnum - pos.pos_bol +1) s)) )
# 194 "td_4/eee_parser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

