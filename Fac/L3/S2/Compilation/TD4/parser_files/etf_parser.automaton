State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SUB shift to state 1
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On EOF shift to state 16
-- On term shift to state 4
-- On main shift to state 17
-- On factor shift to state 10
-- On expr shift to state 18
## Reductions:

State 1:
## Known stack suffix:
## SUB
## LR(1) items:
expr -> SUB . term [ RPAR EOF ADD ]
## Transitions:
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On term shift to state 15
-- On factor shift to state 10
## Reductions:

State 2:
## Known stack suffix:
## LPAR
## LR(1) items:
factor -> LPAR . expr RPAR [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On SUB shift to state 1
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On term shift to state 4
-- On factor shift to state 10
-- On expr shift to state 11
## Reductions:

State 3:
## Known stack suffix:
## INT
## LR(1) items:
factor -> INT . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production factor -> INT

State 4:
## Known stack suffix:
## term
## LR(1) items:
expr -> term . [ RPAR EOF ADD ]
term -> term . MUL factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . DIV factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . REC [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On REC shift to state 5
-- On MUL shift to state 6
-- On DIV shift to state 8
## Reductions:
-- On RPAR EOF ADD
--   reduce production expr -> term

State 5:
## Known stack suffix:
## term REC
## LR(1) items:
term -> term REC . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production term -> term REC

State 6:
## Known stack suffix:
## term MUL
## LR(1) items:
term -> term MUL . factor [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On factor shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## term MUL factor
## LR(1) items:
term -> term MUL factor . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production term -> term MUL factor

State 8:
## Known stack suffix:
## term DIV
## LR(1) items:
term -> term DIV . factor [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On factor shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## term DIV factor
## LR(1) items:
term -> term DIV factor . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production term -> term DIV factor

State 10:
## Known stack suffix:
## factor
## LR(1) items:
term -> factor . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production term -> factor

State 11:
## Known stack suffix:
## LPAR expr
## LR(1) items:
expr -> expr . ADD term [ RPAR ADD ]
factor -> LPAR expr . RPAR [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On RPAR shift to state 12
-- On ADD shift to state 13
## Reductions:

State 12:
## Known stack suffix:
## LPAR expr RPAR
## LR(1) items:
factor -> LPAR expr RPAR . [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
## Reductions:
-- On RPAR REC MUL EOF DIV ADD
--   reduce production factor -> LPAR expr RPAR

State 13:
## Known stack suffix:
## expr ADD
## LR(1) items:
expr -> expr ADD . term [ RPAR EOF ADD ]
## Transitions:
-- On LPAR shift to state 2
-- On INT shift to state 3
-- On term shift to state 14
-- On factor shift to state 10
## Reductions:

State 14:
## Known stack suffix:
## expr ADD term
## LR(1) items:
expr -> expr ADD term . [ RPAR EOF ADD ]
term -> term . MUL factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . DIV factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . REC [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On REC shift to state 5
-- On MUL shift to state 6
-- On DIV shift to state 8
## Reductions:
-- On RPAR EOF ADD
--   reduce production expr -> expr ADD term

State 15:
## Known stack suffix:
## SUB term
## LR(1) items:
expr -> SUB term . [ RPAR EOF ADD ]
term -> term . MUL factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . DIV factor [ RPAR REC MUL EOF DIV ADD ]
term -> term . REC [ RPAR REC MUL EOF DIV ADD ]
## Transitions:
-- On REC shift to state 5
-- On MUL shift to state 6
-- On DIV shift to state 8
## Reductions:
-- On RPAR EOF ADD
--   reduce production expr -> SUB term

State 16:
## Known stack suffix:
## EOF
## LR(1) items:
main -> EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> EOF

State 17:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 18:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . ADD term [ EOF ADD ]
main -> expr . EOF [ # ]
## Transitions:
-- On EOF shift to state 19
-- On ADD shift to state 13
## Reductions:

State 19:
## Known stack suffix:
## expr EOF
## LR(1) items:
main -> expr EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> expr EOF

