        -:    0:Source:/mnt/c/Users/thoma/Documents/COURS/Fac/L2/Projet Tech/TD8/07B/game_text.c
        -:    0:Graph:/mnt/c/Users/thoma/Documents/COURS/Fac/L2/Projet Tech/TD8/07B/build/CMakeFiles/game_text.dir/game_text.c.gcno
        -:    0:Data:/mnt/c/Users/thoma/Documents/COURS/Fac/L2/Projet Tech/TD8/07B/build/CMakeFiles/game_text.dir/game_text.c.gcda
        -:    0:Runs:3
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:
        -:    4:#include "game_aux.h"
        -:    5:#include "game_ext.h"
        -:    6:#include "game_struct.h"
        -:    7:#include "queue.h"
        -:    8:
        3:    9:int main(void) {
        3:   10:  game g = game_new_empty_ext(10, 6, true, false);
        -:   11:  char c;
        3:   12:  bool quit = false;
       52:   13:  while (game_is_over(g) == 0) {  // game is running
       52:   14:    if (quit) {
        3:   15:      break;
        -:   16:    }  // vérification que le joueur n'as pas quitté la partie
       49:   17:    game_print(g);
        -:   18:    unsigned int i, j;
       49:   19:    printf("*** votre coup ? ***\n");
       49:   20:    scanf(" %c", &c);
       49:   21:    switch (c) {
        5:   22:      case 'h':
        5:   23:        printf("*******************\n");
        5:   24:        printf("*** page d'aide ***\n");
        5:   25:        printf("*******************\n");
        5:   26:        break;
        -:   27:
        1:   28:      case 'r':
        1:   29:        printf("|| réinitialisation de la grille ||\n");
        1:   30:        game_restart(g);
        1:   31:        break;
        -:   32:
        3:   33:      case 'q':
        3:   34:        printf("|| Vous venez de quitter la partie ||\n");
        3:   35:        quit = true;  // variable indiquant que le joueur quitte la partie
        3:   36:        break;
        -:   37:
       13:   38:      case 'z':
       13:   39:        if (queue_is_empty(g->q_undo)) /*verif juste pour afficher le texte*/ {
        2:   40:          printf("|| Vous n'avez pas de coup à annuler ||\n");
        -:   41:        } else {
       11:   42:          game_undo(g);
        -:   43:        }
       13:   44:        break;
        -:   45:
        9:   46:      case 'y':
        9:   47:        if (queue_is_empty(g->q_redo)) /*verif juste pour afficher le texte*/ {
        2:   48:          printf("|| Vous n'avez pas de coup annulé à rejouer ||\n");
        -:   49:        } else {
        7:   50:          game_redo(g);
        -:   51:        }
        9:   52:        break;
        -:   53:
       13:   54:      case 'w':
        -:   55:      case 'b':
        -:   56:      case 'e':
        -:   57:
       13:   58:        printf("|| Veuillez rentrer la ligne de votre coup ||\n");
       13:   59:        scanf(" %d", &i);
        -:   60:
       13:   61:        printf("|| Veuillez rentrer la colonne de votre coup ||\n");
       13:   62:        scanf(" %d", &j);
        -:   63:        square s;
       13:   64:        switch (c) {
       10:   65:          case 'w':
       10:   66:            s = S_ZERO;
       10:   67:            break;
        -:   68:
        2:   69:          case 'b':
        2:   70:            s = S_ONE;
        2:   71:            break;
        -:   72:
        1:   73:          case 'e':
        1:   74:            s = S_EMPTY;
        1:   75:            break;
        -:   76:        }
        -:   77:
       13:   78:        if (game_check_move(g, i, j, s) == false) {
    #####:   79:          printf(
        -:   80:              "|| Vous ne pouvez pas jouer votre coup en position %d / %d  "
        -:   81:              "||\n",
        -:   82:              i, j);
        -:   83:        } else {
       13:   84:          game_play_move(g, i, j, s);
       13:   85:          queue_clear_full(g->q_redo, free);
        -:   86:        }
       13:   87:        break;
        -:   88:
        5:   89:      default:
        5:   90:        printf("|| Vous n'avez pas rentré une instruction valide ||\n");
        5:   91:        break;
        -:   92:    }
        -:   93:  }
        -:   94:
        3:   95:  if (game_is_over(g) == 0) {
        3:   96:    printf("shame\n");
        -:   97:  } else {
    #####:   98:    printf("congratulation\n");
        -:   99:  }
        3:  100:  game_print(g);
        3:  101:  game_delete(g);
        -:  102:  // end of the programm to keep
        3:  103:  return (EXIT_SUCCESS);
        -:  104:}
